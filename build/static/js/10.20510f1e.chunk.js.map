{"version":3,"sources":["apis/sentenceApi.js","constant/sentence-topics.js","components/UI/InputCustom/style.js","components/UI/InputCustom/index.js","components/UI/TooltipCustom.js","components/Contribution/Word/style.js","components/Contribution/Word/InformationTooltip.js","components/Contribution/Sentence/index.js","components/Contribution/Sentence/data.js","components/Contribution/style.js","components/UI/UploadButton/style.js","components/UI/UploadButton/index.js","components/UI/PhoneticKeyboard/style.js","components/UI/PhoneticKeyboard/index.js","components/Contribution/Word/PhoneticInput.js","components/Contribution/Word/index.js","components/Contribution/Word/data.js","components/Contribution/index.js","pages/Contribution.js"],"names":["URL","sentenceApi","postContributeSentence","sentence","mean","note","topics","axiosClient","post","getTotalSentences","get","params","JSON","stringify","getSentenceList","page","perPage","SENTENCE_TOPICS","key","title","makeStyles","root","backgroundColor","borderRadius","border","color","fontSize","borderColor","InputCustom","props","endAdornment","error","inputProps","propRest","classes","useStyle","TextField","InputProps","disableUnderline","InputLabelProps","shrink","variant","defaultProps","TooltipCustom","useState","open","setOpen","isMd","setIsMd","children","rest","useEffect","isSub","document","body","offsetWidth","Tooltip","onClick","padding","boxShadow","textTransform","marginBottom","grid","marginTop","tooltipIcon","btn","marginLeft","minWidth","btnReset","filter","sentenceInput","minHeight","InformationTooltip","className","schema","yup","shape","trim","required","lowercase","max","MAX","SENTENCE_LEN","SENTENCE_MEAN_LEN","SENTENCE_NOTE_LEN","ButtonWrapper","Grid","item","xs","SentenceContribution","submitting","onSubmitForm","useRef","resetFlag","setResetFlag","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","formData","current","autoComplete","container","spacing","label","multiline","Boolean","autoFocus","maxLength","name","message","TopicSelect","buttonWrapper","tagsWrapper","topicList","onChange","v","Button","endIcon","disabled","Math","random","type","SentenceContributionData","setSubmitting","dispatch","useDispatch","a","status","setMessage","duration","response","data","Sentence","margin","tabs","display","borderBottom","tab","cursor","textAlign","fontWeight","transition","borderTopLeftRadius","borderTopRightRadius","input","opacity","skeleton","height","review","width","overflow","whiteSpace","textOverflow","transform","UploadButton","state","setState","loadFileError","onFileChange","file","size","split","IMG_SIZE","checkFile","Compressor","quality","success","fileResult","fileReader","FileReader","readAsDataURL","onerror","onload","e","imgSrcBase64","target","result","imgSrc","fileName","fileSize","toFixed","accept","id","htmlFor","files","component","Skeleton","src","alt","theme","gridTemplateColumns","gap","breakpoints","up","IPA_CHARS","PhoneticKeyboard","onClose","onInput","map","c","index","PhoneticInput","errorMessage","ref","inputRef","openKeyboard","setOpenKeyboard","value","setValue","md","lg","focus","delayTimer","word","WORD_LEN","MEAN_WORD_LEN","phonetic","PHONETIC_LEN","oneOf","WORD_TYPES","i","level","WORD_LEVELS","specialty","WORD_SPECIALTY","examples","EXAMPLE_WORD_LEN","synonyms","SYNONYMS_WORD_LEN","antonyms","NOTE_WORD_LEN","TagsWrapper","WordContribution","getValues","picture","handleCheckWordExistence","eWord","eType","debounce","wordApi","getCheckWordExistence","apiRes","isExist","SelectCustom","options","buttonTitle","analysisExample","exampleStr","exampleArr","str","toLocaleLowerCase","indexOf","WordContributionData","synonymArr","antonymArr","dataSend","replaceAll","postContributeWord","Word","Contribution","mode","setMode","tabContent","ContributionPage","useTitle","useScrollTop"],"mappings":"mGAAA,aAEMA,EAAM,YAENC,EAAc,CAClBC,uBAAwB,SAACC,EAAUC,EAAMC,EAAMC,GAC7C,OAAOC,IAAYC,KAAZ,UAAoBR,EAApB,4BAAmD,CACxDG,WACAC,OACAC,OACAC,YAIJG,kBAAmB,WAAkB,IAAjBH,EAAgB,uDAAP,GAC3B,OAAOC,IAAYG,IAAZ,UAAmBV,EAAnB,UAAgC,CACrCW,OAAQ,CAAEL,OAAQM,KAAKC,UAAUP,OAIrCQ,gBAAiB,WAA0C,IAAzCC,EAAwC,uDAAjC,EAAGC,EAA8B,uDAApB,GAAIV,EAAgB,uDAAP,GACjD,OAAOC,IAAYG,IAAZ,UAAmBV,EAAnB,SAA+B,CACpCW,OAAQ,CACNI,OACAC,UACAV,OAAQM,KAAKC,UAAUP,QAMhBL,O,iCC/Bf,kCAAO,IAAMgB,EAAkB,CAC7B,CACEC,IAAK,IACLC,MAAO,qCAET,CACED,IAAK,IACLC,MAAO,oBAET,CACED,IAAK,IACLC,MAAO,mDAET,CACED,IAAK,IACLC,MAAO,oCAET,CACED,IAAK,IACLC,MAAO,gCAET,CACED,IAAK,IACLC,MAAO,oCAET,CACED,IAAK,IACLC,MAAO,mDAET,CACED,IAAK,IACLC,MAAO,2BAET,CACED,IAAK,IACLC,MAAO,qBAET,CACED,IAAK,IACLC,MAAO,qBAET,CACED,IAAK,KACLC,MAAO,oBAET,CACED,IAAK,KACLC,MAAO,gBAET,CACED,IAAK,KACLC,MAAO,mCAET,CACED,IAAK,KACLC,MAAO,0CAET,CACED,IAAK,KACLC,MAAO,6CAET,CACED,IAAK,KACLC,MAAO,oBAET,CACED,IAAK,KACLC,MAAO,uBAET,CACED,IAAK,KACLC,MAAO,a,mOCrEIC,eAAW,iBAAO,CAC/BC,KAAM,CAEJ,uBAAwB,CACtBC,gBAAiB,yBACjBC,aAAc,uBACdC,OAAQ,gCACRC,MAAO,oBAEP,kBAAmB,CACjBA,MAAO,oBACPC,SAAU,WAId,mCAAoC,CAClCC,YAAa,0BAIf,uBAAwB,CACtBF,MAAO,qBACPC,SAAU,UAGZ,sBAAuB,CACrBD,MAAO,0BAIT,iCAAkC,CAChCA,MAAO,sBAGT,iCAAkC,CAChCE,YAAa,2B,+CChCnB,SAASC,EAAYC,GACnB,IAAQC,EAAiDD,EAAjDC,aAAcC,EAAmCF,EAAnCE,MAAOC,EAA4BH,EAA5BG,WAAeC,EAA5C,YAAyDJ,EAAzD,GACMK,EAAUC,IAEhB,OACE,cAACC,EAAA,EAAD,aACEF,QAASA,EACTH,MAAOA,EACPM,WAAY,CACVC,kBAAkB,EAClBR,gBAEFE,WAAYA,EACZO,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,UACJR,IAWVL,EAAYc,aAAe,CACzBZ,aAAc,KACdC,OAAO,EACPC,WAAY,IAGCJ,Q,qFCMAe,MAxCf,SAAuBd,GACrB,MAAwBe,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,oBAAU,GAAlC,mBAAOG,EAAP,KAAaC,EAAb,KACQC,EAAsBpB,EAAtBoB,SAAaC,EAArB,YAA8BrB,EAA9B,GAcA,OAZAsB,qBAAU,WACR,IAAIC,GAAQ,EAQZ,OANIC,SAASC,KAAKC,YAAc,IAC9BH,GAASJ,GAAQ,GAEjBI,GAASJ,GAAQ,GAGZ,kBAAOI,GAAQ,KACrB,IAGD,oCACa,IAAVL,GACC,mCACGA,EAEC,cAACS,EAAA,EAAD,2BAAaN,GAAb,aAAoBD,KAGpB,cAACO,EAAA,EAAD,2BAAaN,GAAb,IAAmBL,KAAMA,EAAMY,QAAS,kBAAMX,GAASD,IAAvD,SACGI,UC9BA7B,eAAW,iBAAO,CAC/BC,KAAM,CACJqC,QAAS,gBACTC,UAAW,oBACXpC,aAAc,uBACdD,gBAAiB,uBAGnBH,MAAO,CACLM,MAAO,qBACPmC,cAAe,aACflC,SAAU,SACVmC,aAAc,UAGhBC,KAAM,CACJC,UAAW,SACXF,aAAc,UAGhBG,YAAa,CACXtC,SAAU,SACVD,MAAO,sBAGTwC,IAAK,CACHC,WAAY,OACZN,cAAe,OACfO,SAAU,SAGZC,SAAU,CACRzC,YAAa,iCACbF,MAAO,iCAEP,oBAAqB,CACnB4C,OAAQ,qBAIZC,cAAe,CACbC,UAAW,YCvBAC,MAdf,YAAwC,IAAVrD,EAAS,EAATA,MACtBe,EAAUC,IAEhB,OACE,cAAC,EAAD,CAAehB,MAAOA,EAAOsD,UAAU,WAAvC,SACE,cAAC,IAAD,CAAUA,UAAWvC,EAAQ8B,iBCM7BU,EAASC,MAAaC,MAAM,CAChCzE,SAAUwE,MAEPE,OACAC,SAAS,4BACTC,YACAC,IAAIC,IAAIC,aALD,qBAK6BD,IAAIC,aALjC,gBAMV9E,KAAMuE,MAEHE,OACAE,YACAD,SAAS,6CACTE,IAAIC,IAAIE,kBALL,qBAKsCF,IAAIE,kBAL1C,gBAMN9E,KAAMsE,MAEHK,IACCC,IAAIG,kBAHF,uBAIcH,IAAIG,kBAJlB,kBAOFC,EAAgB,SAACxD,GAAD,OAAW,cAACyD,EAAA,EAAD,2BAAUzD,GAAV,IAAiB0D,MAAI,EAACC,GAAI,OA6I5CC,MA3If,YAA6D,IAAD,MAA5BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aACpCzD,EAAUC,IACV7B,EAASsF,iBAAO,IACtB,EAAkChD,mBAAS,GAA3C,mBAAOiD,EAAP,KAAkBC,EAAlB,KACA,EAKIC,YAAQ,CACVC,SAAUC,YAAYvB,KALtBwB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MAeF,OACE,sBAAK7B,UAAWvC,EAAQb,KAAxB,UACE,oBAAIoD,UAAWvC,EAAQf,MAAvB,mDACA,qBAAKsD,UAAU,eAEf,uBAAM8B,SAAUJ,GATK,SAACK,GACxBb,EAAa,2BAAKa,GAAN,IAAgBlG,OAAQA,EAAOmG,cAQOC,aAAa,MAA7D,UACE,eAACpB,EAAA,EAAD,CAAMb,UAAWvC,EAAQ4B,KAAM6C,WAAS,EAACC,QAAS,EAAlD,UAEE,eAACtB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,EAAD,CACEf,UAAU,QACVoC,MAAM,0BACNC,WAAS,EACT/E,MAAOgF,QAAQX,EAAOjG,UACtB6B,WAAU,aACRgF,WAAW,EACXvC,UAAWvC,EAAQoC,cACnB2C,UAAWhC,IAAIC,aACfgC,KAAM,YAEHhB,EAAS,eAIfE,EAAOjG,UACN,mBAAGsE,UAAU,aAAb,mBAA2B2B,EAAOjG,gBAAlC,aAA2B,EAAiBgH,aAKhD,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,EAAD,CACEf,UAAU,QACVoC,MAAM,0CACN9E,MAAOgF,QAAQX,EAAOhG,MACtB0G,WAAS,EACT9E,WAAU,aACRiF,UAAWhC,IAAIE,kBACf+B,KAAM,OACNzC,UAAWvC,EAAQoC,eAChB4B,EAAS,WAIfE,EAAOhG,MACN,mBAAGqE,UAAU,aAAb,mBAA2B2B,EAAOhG,YAAlC,aAA2B,EAAa+G,aAK5C,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,EAAD,CACEf,UAAU,QACVoC,MAAM,WACN9E,MAAOgF,QAAQX,EAAO/F,MACtByG,WAAS,EACT9E,WAAU,aACRyC,UAAWvC,EAAQoC,cACnB2C,UAAWhC,IAAIG,kBACf8B,KAAM,QACHhB,EAAS,SAEdpE,aACE,cAAC,EAAD,CAAoBX,MAAM,0BAI7BiF,EAAO/F,MACN,mBAAGoE,UAAU,aAAb,mBAA2B2B,EAAO/F,YAAlC,aAA2B,EAAa8G,aAK5C,cAACC,EAAA,EAAD,CACEC,cAAehC,EACfiC,YAAajC,EACbkC,UAAWtG,IACXuG,SAAU,SAACC,GAAD,OAAQnH,EAAOmG,QAAUgB,GACnC5B,UAAWA,OAIf,qBAAKpB,UAAU,eAGf,sBAAKA,UAAU,6CAAf,UACE,cAACiD,EAAA,EAAD,CACEjD,UAAS,UAAKvC,EAAQ+B,IAAb,YAAoB/B,EAAQkC,UACrC3C,MAAM,YACNkG,QAAS,cAAC,IAAD,IACTlF,QAAQ,WACRmF,SAAUlC,EACVjC,QAtGU,WAClBnD,EAAOmG,QAAU,GACjBX,EAAa+B,KAAKC,SAAW,GAC7BxB,EAAM,CAAEnG,SAAU,GAAIC,KAAM,GAAIC,KAAM,MA6FhC,mBASA,cAACqH,EAAA,EAAD,CACEK,KAAK,SACLtD,UAAS,UAAKvC,EAAQ+B,IAAb,sBACT2D,SAAUlC,EACViC,QACEjC,EAAa,cAAC,IAAD,CAAUjB,UAAU,aAAgB,cAAC,IAAD,IAEnDhC,QAAQ,YAPV,8BC1GKuF,MA7Cf,WACE,MAAoCpF,oBAAS,GAA7C,mBAAO8C,EAAP,KAAmBuC,EAAnB,KACMC,EAAWC,cAEXhC,EAAY,uCAAG,WAAOK,GAAP,2BAAA4B,EAAA,6DACXjI,EAAiCqG,EAAjCrG,SAAUC,EAAuBoG,EAAvBpG,KAAMC,EAAiBmG,EAAjBnG,KAAMC,EAAWkG,EAAXlG,OADX,SAGjB2H,GAAc,GAHG,SAKIhI,IAAYC,uBAC/BC,EACAC,EACAC,EACAC,GATe,OAWK,MAXL,OAWN+H,QACTH,EACEI,YAAW,CACTP,KAAM,UACNZ,QACE,uEACFoB,SAAU,OAjBC,gDAsBXpB,GACJ,eAAMqB,gBAAN,mBAAgBC,YAAhB,eAAsBtB,UACtB,sBACFe,EACEI,YAAW,CACTP,KAAM,QACNZ,aA5Ba,yBAgCjBc,GAAc,GAhCG,4EAAH,sDAoClB,OACE,cAACS,EAAD,CAAsBhD,WAAYA,EAAYC,aAAcQ,KC7CjD/E,eAAW,iBAAO,CAC/BC,KAAM,CACJsH,OAAQ,YAGVC,KAAM,CACJ7E,UAAW,SACXF,aAAc,SACdgF,QAAS,OACTC,aAAc,iCAGhBC,IAAK,CACHrF,QAAS,gBACTjC,MAAO,qBACPuH,OAAQ,UAERC,UAAW,SACXvH,SAAU,SACVkC,cAAe,YACfsF,WAAY,IAEZC,WAAY,YAEZ,WAAY,CACV7H,gBAAiB,uBACjB8H,oBAAqB,EACrBC,qBAAsB,EACtB5H,MAAO,a,6FC5BEL,gBAAW,iBAAO,CAC/BkI,MAAO,CACLT,QAAS,QAGX5E,IAAK,CACHM,UAAW,SACXjD,gBAAiB,oCACjBqC,UAAW,kBACXnC,OAAQ,gCACRC,MAAO,qBAEPmC,cAAe,aACf,oBAAqB,CACnB2F,QAAS,SAIbC,SAAU,CACRC,OAAQ,kBACRnI,gBAAiB,0BAGnBoI,OAAQ,CACNpI,gBAAiB,yBACjBE,OAAQ,gCACRkC,QAAS,gBACTnC,aAAc,0BAEd,QAAS,CACPkI,OAAQ,SACRE,MAAO,UAGT,MAAO,CACLlI,MAAO,oBACPC,SAAU,SACVkI,SAAU,SACVC,WAAY,SACZC,aAAc,WACdpG,QAAS,YAGX,UAAW,CACTjC,MAAO,qBACPC,SAAU,SAEVyH,WAAY,YACZ,oBAAqB,CACnBY,UAAW,oBCvBnB,SAASC,GAAT,GAAkE,IAAD,MAAzC7I,EAAyC,EAAzCA,MAAOsD,EAAkC,EAAlCA,UAAW+C,EAAuB,EAAvBA,SAAU3B,EAAa,EAAbA,UAC5C3D,EAAUC,KACV+F,EAAWC,cACjB,EAA0BvF,mBAAS,CAAEyF,OAAQ,EAAGI,KAAM,OAAtD,mBAAOwB,EAAP,KAAcC,EAAd,KAEA/G,qBAAU,WACH0C,GAELqE,EAAS,CAAE7B,OAAQ,EAAGI,KAAM,SAC3B,CAAC5C,IAEJ,IAAMsE,EAAgB,WACpB3C,EAAS,MACT0C,EAAS,CAAE7B,OAAQ,IACnBH,EACEI,YAAW,CACTP,KAAM,QACNZ,QAAS,kEAKTiD,EAAe,SAACC,GACpB,MAvCJ,SAAmBA,GACjB,IAAKA,EAAM,MAAO,CAAEhC,QAAQ,EAAOlB,QAAS,kCAC5C,IAAQY,EAAesC,EAAftC,KAAMuC,EAASD,EAATC,KAEd,MAA2B,UAAvBvC,EAAKwC,MAAM,KAAK,GACX,CAAElC,QAAQ,EAAOlB,QAAS,0DAE/BmD,EAAI,SAAG,KAAQ,GAAIrF,IAAIuF,SAClB,CACLnC,QAAQ,EACRlB,QAAQ,oEAAD,OAAkClC,IAAIuF,SAAtC,QAGJ,CAAEnC,QAAQ,GA0BkBoC,CAAUJ,GAAnChC,EAAR,EAAQA,OAAR,IAAgBlB,eAAhB,MAA0B,GAA1B,EACA,IAAKkB,EAGH,OAFAH,EAASI,YAAW,CAAEP,KAAM,QAASZ,kBACrCK,EAAS,MAIX0C,EAAS,CAAE7B,OAAQ,IACnB,IAAMiC,EAAOD,EAAKC,KAAL,SAAY,KAAQ,GAGjC,IAAII,KAAWL,EAAM,CACnBM,QAASL,EAAO,EAAI,GAAM,GAE1BM,QAHmB,SAGXC,GACN,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcH,GAEzBC,EAAWG,QAAUd,EAErBW,EAAWI,OAAS,SAAUC,GAC5B,IAAMC,EAAeD,EAAEE,OAAOC,OAC9B9D,EAAS4D,GACTlB,EAAS,CACP7B,OAAQ,EACRI,KAAM,CACJ8C,OAAQH,EACRI,SAAUX,EAAW3D,KACrBuE,UAAWZ,EAAWP,KAAX,SAAkB,KAAQ,IAAGoB,QAAQ,QAMxD3J,MAvBmB,WAwBjBoI,QAUN,OACE,sBAAK1F,UAAWA,EAAhB,UAEoB,IAAjBwF,EAAM5B,QACL,qCACE,uBACE5D,UAAWvC,EAAQoH,MACnBqC,OAAO,UACPC,GAAG,cACHC,QAAQ,wBACR9D,KAAK,OACLP,SAAU,SAAC2D,GAAD,OAAOf,EAAae,EAAEE,OAAOS,MAAM,OAE/C,uBAAOD,QAAQ,cAAf,SACE,cAACnE,EAAA,EAAD,CACEjD,UAAS,UAAKvC,EAAQ+B,IAAb,gBACTxB,QAAQ,YACRhB,MAAM,UACNsK,UAAU,OACVpE,QAAS,cAAC,IAAD,IALX,SAMGxG,SAOS,IAAjB8I,EAAM5B,QACL,cAAC2D,EAAA,EAAD,CAAUvJ,QAAQ,OAAOP,QAAS,CAAEb,KAAMa,EAAQsH,YAIlC,IAAjBS,EAAM5B,QACL,sBAAK5D,UAAS,UAAKvC,EAAQwH,OAAb,oCAAd,UACE,qBAAKuC,IAAG,UAAEhC,EAAMxB,YAAR,aAAE,EAAY8C,OAAQW,IAAI,UAClC,kDAAOjC,EAAMxB,YAAb,aAAO,EAAY+C,SAAnB,uBAAgCvB,EAAMxB,YAAtC,aAAgC,EAAYgD,SAA5C,eACA,cAAC,IAAD,CAAYhH,UAAU,mBAAmBhB,QAzC5B,WACnB+D,EAAS,MACT0C,EAAS,CAAE7B,OAAQ,EAAGI,KAAM,gBAqDhCuB,GAAatH,aAAe,CAC1BvB,MAAO,SACPsD,UAAW,GACX+C,SAAU,aACV3B,UAAW,GAGEmE,U,kBCvJA5I,gBAAW,SAAC+K,GAAD,YAAY,CACpC9K,MAAI,GACFC,gBAAiB,uBACjBqC,UAAW,oBACXpC,aAAc,uBACdmC,QAAS,SAETmF,QAAS,OACTuD,oBAAqB,iBACrBC,IAAK,UARH,eAUDF,EAAMG,YAAYC,GAAG,MAAQ,CAC5BH,oBAAqB,oBAXrB,eAcF,SAAU,CACR3K,MAAO,oBACPC,SAAU,OACVwH,WAAY,IACZxF,QAAS,SACTsF,OAAQ,UACRC,UAAW,SACX3H,gBAAiB,yBACjBC,aAAc,0BAEd,UAAW,CACTD,gBAAiB,0BAGnB6H,WAAY,YACZ,oBAAqB,CACnB7H,gBAAiB,0BA9BnB,OCCAkL,GAAY,CAChB,IACA,SACA,UACA,SACA,UACA,IACA,SACA,eACA,eACA,OACA,SACA,UACA,SACA,eACA,UACA,eACA,eACA,eACA,UACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,UAGF,SAASC,GAAT,GAAiD,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC7BzK,EAAUC,KAChB,OACE,sBAAKsC,UAAWvC,EAAQb,KAAxB,UACGmL,GAAUI,KAAI,SAACC,EAAGC,GAAJ,OACb,sBAAkBrJ,QAAS,kBAAMkJ,EAAQE,IAAzC,SACGA,GADQC,MAKb,sBAAMrJ,QAASiJ,EAASjI,UAAU,QAAlC,sBAYNgI,GAAiB/J,aAAe,CAC9BgK,QAAS,aACTC,QAAS,cAGIF,U,8DCtDf,SAASM,GAAclL,GACrB,IAAQmL,EAA2DnL,EAA3DmL,aAAcjL,EAA6CF,EAA7CE,MAAOmE,EAAsCrE,EAAtCqE,SAAUL,EAA4BhE,EAA5BgE,UAC/B7D,EADR,YAAmEH,EAAnE,IACQG,WACAiL,EAAiB/G,EAAjB+G,IAAQ/J,EAAhB,YAAyBgD,EAAzB,IACMgH,EAAWtH,iBAAO,MAExB,EAAwChD,oBAAS,GAAjD,mBAAOuK,EAAP,KAAqBC,EAArB,KACA,EAA0BxK,mBAAS,IAAnC,mBAAOyK,EAAP,KAAcC,EAAd,KAeA,OANAnK,qBAAU,WACH0C,GAELyH,EAAS,MACR,CAACzH,IAGF,qCACE,eAACP,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/J,QAAS,kBAAM2J,GAAgB,IAC/B3I,UAAU,QACVoC,MAAM,eACN9E,MAAOA,EACPsL,MAAOA,EACPrL,WAAU,uCACLA,GACAkB,GAFK,IAGR+J,IAAK,SAAC9B,GACJ8B,EAAI9B,GACJ+B,EAASzG,QAAU0E,KAGvB3D,SAAU,SAAC2D,GAAD,OAAOmC,EAASnC,EAAEE,OAAOgC,QACnCvL,aACE,cAAC,EAAD,CAAoBX,MAAM,oEAG7B6L,GAAgB,mBAAGvI,UAAU,aAAb,SAA2BuI,OAG7CG,GACC,cAAC7H,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,GAAD,CAAkBmH,QAtCV,SAACE,GACfS,EAASD,EAAQR,GACjBK,EAASzG,QAAQgH,SAoCyBf,QAxCpB,kBAAMU,GAAgB,WAsDhDL,GAAcrK,aAAe,CAC3BX,OAAO,EACPiL,aAAc,KACdnH,UAAW,GAGEkH,UCrDXW,GAAa,KAEXhJ,GAASC,MAAaC,MAAM,CAChC+I,KAAMhJ,MAEHE,OACAC,SAAS,wBACTC,YACAC,IAAIC,IAAI2I,SALL,wBAKgC3I,IAAI2I,SALpC,eAMNxN,KAAMuE,MAEHE,OACAE,YACAD,SAAS,0BACTE,IAAIC,IAAI4I,cALL,wBAKqC5I,IAAI4I,cALzC,gBAMNC,SAAUnJ,MAEPE,OACAE,YACAD,SAAS,gCACTE,IAAIC,IAAI8I,aALD,yBAKiC9I,IAAI8I,aALrC,gBAMVhG,KAAMpD,MAEHG,SAAS,wBACTkJ,MAAMC,IAAWrB,KAAI,SAACsB,GAAD,OAAOA,EAAEb,UACjCc,MAAOxJ,MAEJG,SAAS,gBACTkJ,MAAMI,IAAYxB,KAAI,SAACsB,GAAD,OAAOA,EAAEb,UAClCgB,UAAW1J,MAERG,SAAS,sBACTkJ,MAAMM,IAAe1B,KAAI,SAACsB,GAAD,OAAOA,EAAEb,UACrCkB,SAAU5J,MAEPK,IAAIC,IAAIuJ,iBAFD,0BAEsCvJ,IAAIuJ,iBAF1C,eAGVC,SAAU9J,MAEPK,IACCC,IAAIyJ,kBAHE,2BAIczJ,IAAIyJ,kBAJlB,eAMVC,SAAUhK,MAEPK,IACCC,IAAIyJ,kBAHE,0BAIazJ,IAAIyJ,kBAJjB,eAMVrO,KAAMsE,MAEHK,IAAIC,IAAI2J,cAFL,uBAEoC3J,IAAI2J,cAFxC,iBAMFvJ,GAAgB,SAACxD,GAAD,OAAW,cAACyD,EAAA,EAAD,2BAAUzD,GAAV,IAAiB0D,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,MACpEqB,GAAc,SAAChN,GAAD,OAAW,cAACyD,EAAA,EAAD,2BAAUzD,GAAV,IAAiB0D,MAAI,EAACC,GAAI,OAEzD,SAASsJ,GAAT,GAAyD,IAAD,oBAA5BnJ,EAA4B,EAA5BA,aAAcD,EAAc,EAAdA,WAClCxD,EAAUC,IAChB,EAAkCS,mBAAS,GAA3C,mBAAOiD,EAAP,KAAkBC,EAAlB,KACMoC,EAAWC,cACjB,EAMIpC,YAAQ,CACVC,SAAUC,YAAYvB,MANtBwB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OACbE,EAJF,EAIEA,MACAyI,EALF,EAKEA,UAKIzO,EAASsF,iBAAO,IAChBoJ,EAAUpJ,iBAAO,MAyBjBqJ,EAA2B,SAACC,EAAOC,GACvCzB,GAAa0B,aACX1B,GADmB,sBAEnB,sCAAAtF,EAAA,sEAEUuF,EAAOuB,EAAK,UAAGA,EAAM7D,cAAT,aAAG,EAAcgC,MAAQ0B,EAAU,QACnDhH,EAAOoH,EAAK,UAAGA,EAAM9D,cAAT,aAAG,EAAcgC,MAAQ0B,EAAU,QAHrD,SAKyBM,IAAQC,sBAAsB3B,EAAM5F,GAL7D,OAM0B,OADhBwH,EALV,QAMelH,SAAiB,EACEkH,EAAO9G,KAA3B+G,aADiB,UAGvBtH,EACEI,YAAW,CACTP,KAAM,UACNZ,QAAQ,SAAD,OAAWwG,EAAX,aAAoB5F,EAApB,kBACPQ,SAAU,QAbtB,yGAoBA,MAIJ,OACE,sBAAK9D,UAAWvC,EAAQb,KAAxB,UACE,oBAAIoD,UAAWvC,EAAQf,MAAvB,yCACA,qBAAKsD,UAAU,eAEf,uBAAM8B,SAAUJ,GAvDH,SAACsC,GAChB9C,EAAa,2BAAK8C,GAAN,IAAYnI,OAAQA,EAAOmG,QAASuI,QAASA,EAAQvI,cAsDvBC,aAAa,MAArD,UACE,eAACpB,EAAA,EAAD,CAAMb,UAAWvC,EAAQ4B,KAAM6C,WAAS,EAACC,QAAS,EAAlD,UAEE,eAACtB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,gBACN9E,MAAOgF,QAAQX,EAAOuH,MACtB3L,WAAU,aACRgF,WAAW,EACXC,UAAWhC,IAAI2I,SACf1G,KAAM,QACHhB,EAAS,SAEdsB,SAAU,SAAC2D,GAAD,OAAO8D,EAAyB9D,EAAG,SAE9C/E,EAAOuH,MACN,mBAAGlJ,UAAU,aAAb,mBAA2B2B,EAAOuH,YAAlC,aAA2B,EAAaxG,aAK5C,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,cACN9E,MAAOgF,QAAQX,EAAOhG,MACtB4B,WAAU,aACRiF,UAAWhC,IAAI4I,cACf3G,KAAM,QACHhB,EAAS,WAGfE,EAAOhG,MACN,mBAAGqE,UAAU,aAAb,mBAA2B2B,EAAOhG,YAAlC,aAA2B,EAAa+G,aAK5C,cAAC,GAAD,CACE6F,aAAY,UAAE5G,EAAO0H,gBAAT,aAAE,EAAiB3G,QAC/BpF,MAAOgF,QAAQX,EAAO0H,UACtBjI,UAAWA,EACX7D,WAAY,CACViF,UAAWhC,IAAI8I,aACf7G,KAAM,YAERhB,SAAUA,EAAS,cAIrB,eAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAACiC,EAAA,EAAD,CACEhL,UAAU,QACVoC,MAAM,oBACN6I,QAASzB,IACTlM,MAAOgF,QAAQX,EAAO2B,MACtBlC,UAAWA,EACX7D,WAAU,aACRkF,KAAM,QACHhB,EAAS,SAEdsB,SAAU,SAAC2D,GAAD,OAAO8D,EAAyB,KAAM9D,MAEjD/E,EAAO2B,MACN,mBAAGtD,UAAU,aAAb,mBAA2B2B,EAAO2B,YAAlC,aAA2B,EAAaZ,aAK5C,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAACiC,EAAA,EAAD,CACEhL,UAAU,QACVoC,MAAM,YACN6I,QAAStB,IACTrM,MAAOgF,QAAQX,EAAO+H,OACtBtI,UAAWA,EACX7D,WAAU,aAAIkF,KAAM,SAAYhB,EAAS,YAE1CE,EAAO+H,OACN,mBAAG1J,UAAU,aAAb,mBAA2B2B,EAAO+H,aAAlC,aAA2B,EAAchH,aAK7C,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAACiC,EAAA,EAAD,CACEhL,UAAU,QACVoC,MAAM,cACN6I,QAASpB,IACTvM,MAAOgF,QAAQX,EAAOiI,WACtBxI,UAAWA,EACX7D,WAAU,aACRkF,KAAM,aACHhB,EAAS,gBAGfE,EAAOiI,WACN,mBAAG5J,UAAU,aAAb,mBAA2B2B,EAAOiI,iBAAlC,aAA2B,EAAkBlH,aAKjD,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,UACNC,WAAS,EACT/E,MAAOgF,QAAQX,EAAOmI,UACtBvM,WAAU,aACRkF,KAAM,YACHhB,EAAS,eAIfE,EAAOmI,UACN,mBAAG9J,UAAU,aAAb,mBAA2B2B,EAAOmI,gBAAlC,aAA2B,EAAiBpH,aAKhD,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,WACNC,WAAS,EACT/E,MAAOgF,QAAQX,EAAOqI,UACtBzM,WAAU,aACRkF,KAAM,YACHhB,EAAS,eAGfE,EAAOqI,UACN,mBAAGhK,UAAU,aAAb,mBAA2B2B,EAAOqI,gBAAlC,aAA2B,EAAiBtH,aAKhD,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,WACNC,WAAS,EACT/E,MAAOgF,QAAQX,EAAOuI,UACtB3M,WAAU,aACRkF,KAAM,YACHhB,EAAS,eAGfE,EAAOuI,UACN,mBAAGlK,UAAU,aAAb,mBAA2B2B,EAAOuI,gBAAlC,aAA2B,EAAiBxH,aAKhD,eAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,UACE,cAAC,EAAD,CACE/I,UAAU,QACVoC,MAAM,OACNC,WAAS,EACT/E,MAAOgF,QAAQX,EAAO/F,MACtB2B,WAAU,aACRkF,KAAM,QACHhB,EAAS,WAGfE,EAAO/F,MACN,mBAAGoE,UAAU,aAAb,mBAA2B2B,EAAO/F,YAAlC,aAA2B,EAAa8G,aAK5C,cAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI+H,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,GAAD,CACErM,MAAM,UACNsD,UAAU,cACVoB,UAAWA,EACX2B,SAAU,SAAC+D,GAAD,OAAayD,EAAQvI,QAAU8E,OAK7C,cAACnE,EAAA,EAAD,CACEI,SAAU,SAACD,GAAD,OAAgBjH,EAAOmG,QAAUc,GAC3C1B,UAAWA,EACX8J,YAAY,QACZtI,cAAehC,GACfiC,YAAauH,QAIjB,qBAAKpK,UAAU,eAEf,sBAAKA,UAAU,6CAAf,UACE,cAACiD,EAAA,EAAD,CACEjD,UAAS,UAAKvC,EAAQ+B,IAAb,YAAoB/B,EAAQkC,UACrC3C,MAAM,YACNkG,QAAS,cAAC,IAAD,IACTlF,QAAQ,WACRmF,SAAUlC,EACVjC,QA3PU,WAalBnD,EAAOmG,QAAU,GACjBuI,EAAQvI,QAAU,KAClBH,EAdsB,CACpBqH,KAAM,GACNvN,KAAM,GACN0N,SAAU,GACV/F,KAAM,IACNoG,MAAO,KACPE,UAAW,IACXE,SAAU,GACVE,SAAU,GACVE,SAAU,GACVtO,KAAM,KAKRyF,EAAa+B,KAAKC,SAAW,IAqOvB,mBASA,cAACJ,EAAA,EAAD,CACEK,KAAK,SACLtD,UAAS,UAAKvC,EAAQ+B,IAAb,sBACT2D,SAAUlC,EACViC,QACEjC,EAAa,cAAC,IAAD,CAAUjB,UAAU,aAAgB,cAAC,IAAD,IAEnDhC,QAAQ,YAPV,6BAqBVqM,GAAiBpM,aAAe,CAC9BiD,aAAc,aACdD,YAAY,GAGCoJ,U,wDCvXTc,GAAkB,WAAiC,IAAhCC,EAA+B,uDAAlB,GAAIlC,EAAc,uDAAP,GAC/C,GAA0B,kBAAfkC,GAA0C,KAAfA,EACpC,MAAO,GAGT,IALsD,EAKhDC,EAAaD,EAAWtF,MAAM,MALkB,cAMtCuF,GANsC,IAMtD,2BAA4B,CAAC,IAApBC,EAAmB,QAC1B,IAAmE,IAA/DA,EAAIC,oBAAoBC,QAAQtC,EAAKqC,qBACvC,OAAO,GAR2C,8BAYtD,OAAOF,GAwEMI,OArEf,WACE,MAAoCtN,oBAAS,GAA7C,mBAAO8C,EAAP,KAAmBuC,EAAnB,KACMC,EAAWC,cAEXhC,EAAY,uCAAG,WAAOsC,GAAP,uCAAAL,EAAA,kEAEjBH,GAAc,GACNsG,EAA0D9F,EAA1D8F,SAAUE,EAAgDhG,EAAhDgG,SAAUE,EAAsClG,EAAtCkG,SAAUhB,EAA4BlF,EAA5BkF,KAAMG,EAAsBrF,EAAtBqF,SAAa5K,EAHxC,YAGiDuF,EAHjD,IAOS,mBADpBqH,EAAaF,GAAgBrB,EAAUZ,KACLmC,EAPvB,uBAQf5H,EACEI,YAAW,CACTP,KAAM,UACNZ,QAAS,gDAGbc,GAAc,GAdC,iCAmBXkI,EAA0B,KAAb1B,EAAkBA,EAASlE,MAAM,MAAQ,GAGtD6F,EAA0B,KAAbzB,EAAkBA,EAASpE,MAAM,MAAQ,GAGtD8F,EAzBW,2BA0BZnN,GA1BY,IA2BfqL,SAAUuB,EACVrB,SAAU0B,EACVxB,SAAUyB,EACVzC,OACAG,SAAUA,EAASwC,WAAW,IAAK,MA/BpB,UAkCIjB,IAAQkB,mBAAmBF,GAlC/B,QAoCK,MApCL,OAoCNhI,SACTH,EACEI,YAAW,CACTP,KAAM,UACNZ,QACE,0EAGNc,GAAc,IA5CC,kDA+CXd,GACJ,eAAMqB,gBAAN,mBAAgBC,YAAhB,eAAsBtB,UACtB,mCACFe,EACEI,YAAW,CACTP,KAAM,QACNZ,aAGJc,GAAc,GAxDG,0DAAH,sDA4DlB,OACE,cAACuI,GAAD,CAAkB7K,aAAcQ,EAAcT,WAAYA,KC7C/C+K,OApCf,WACE,IAAMvO,EAAUC,IAChB,EAAwBS,mBAAS,GAAjC,mBAAO8N,EAAP,KAAaC,EAAb,KAEA,OACE,qBAAKlM,UAAU,YAAf,SACE,sBAAKA,UAAWvC,EAAQb,KAAxB,UACE,qBAAIoD,UAAWvC,EAAQ0G,KAAvB,UACE,oBACEnE,UAAS,UAAKvC,EAAQ6G,IAAb,YAA6B,IAAT2H,EAAa,SAAW,IACrDjN,QAAS,kBAAMkN,EAAQ,IAFzB,gCAKA,oBACElM,UAAS,UAAKvC,EAAQ6G,IAAb,YAA6B,IAAT2H,EAAa,SAAW,IACrDjN,QAAS,kBAAMkN,EAAQ,IAFzB,sCAOF,qBAAKlM,UAAWvC,EAAQ0O,WAAxB,SACY,IAATF,EACC,qBAAKjM,UAAU,WAAf,SACE,cAAC,GAAD,MAGF,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,c,kBCpBCoM,UAPf,WAIE,OAHAC,aAAS,gBACTC,eAEO,cAAC,GAAD","file":"static/js/10.20510f1e.chunk.js","sourcesContent":["import axiosClient from './axiosClient';\n\nconst URL = '/sentence';\n\nconst sentenceApi = {\n  postContributeSentence: (sentence, mean, note, topics) => {\n    return axiosClient.post(`${URL}/contribute/add-sentence`, {\n      sentence,\n      mean,\n      note,\n      topics,\n    });\n  },\n\n  getTotalSentences: (topics = []) => {\n    return axiosClient.get(`${URL}/total`, {\n      params: { topics: JSON.stringify(topics) },\n    });\n  },\n\n  getSentenceList: (page = 1, perPage = 20, topics = []) => {\n    return axiosClient.get(`${URL}/list`, {\n      params: {\n        page,\n        perPage,\n        topics: JSON.stringify(topics),\n      },\n    });\n  },\n};\n\nexport default sentenceApi;\n","export const SENTENCE_TOPICS = [\n  {\n    key: '0',\n    title: 'Giao tiếp thông dụng',\n  },\n  {\n    key: '1',\n    title: 'Chào hỏi',\n  },\n  {\n    key: '2',\n    title: 'Du lịch - phương hướng',\n  },\n  {\n    key: '3',\n    title: 'Con số - tiền bạc',\n  },\n  {\n    key: '4',\n    title: 'Địa điểm',\n  },\n  {\n    key: '5',\n    title: 'Thời gian, ngày tháng',\n  },\n  {\n    key: '6',\n    title: 'Điện thoại - Internet - Thư',\n  },\n  {\n    key: '7',\n    title: 'Chỗ ăn ở',\n  },\n  {\n    key: '8',\n    title: 'Ăn uống',\n  },\n  {\n    key: '9',\n    title: 'Kết bạn',\n  },\n  {\n    key: '10',\n    title: 'Giải trí',\n  },\n  {\n    key: '11',\n    title: 'Mua sắm',\n  },\n  {\n    key: '12',\n    title: 'Khó khăn giao tiếp',\n  },\n  {\n    key: '13',\n    title: 'Khẩn cấp, Sức khoẻ',\n  },\n  {\n    key: '15',\n    title: 'Câu hỏi thông thường',\n  },\n  {\n    key: '16',\n    title: 'Việc làm',\n  },\n  {\n    key: '17',\n    title: 'Thời tiết',\n  },\n  {\n    key: '18',\n    title: 'Khác',\n  },\n];\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    // input\n    '& .MuiInputBase-root': {\n      backgroundColor: 'var(--bg-color-accent)',\n      borderRadius: 'var(--border-radius)',\n      border: 'solid 1px var(--border-color)',\n      color: 'var(--text-color)',\n\n      '& ::placeholder': {\n        color: 'var(--text-color)',\n        fontSize: '1.6rem',\n      },\n    },\n\n    '& .MuiInputBase-root.Mui-focused': {\n      borderColor: 'var(--secondary-color)',\n    },\n\n    // label\n    '& .MuiFormLabel-root': {\n      color: 'var(--label-color)',\n      fontSize: '1.5rem',\n    },\n\n    '& label.Mui-focused': {\n      color: 'var(--secondary-color)',\n    },\n\n    // error\n    '& .MuiFormLabel-root.Mui-error': {\n      color: 'var(--error-color)',\n    },\n\n    '& .MuiInputBase-root.Mui-error': {\n      borderColor: 'var(--error-color)',\n    },\n  },\n}));\n","import TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\n\nfunction InputCustom(props) {\n  const { endAdornment, error, inputProps, ...propRest } = props;\n  const classes = useStyle();\n\n  return (\n    <TextField\n      classes={classes}\n      error={error}\n      InputProps={{\n        disableUnderline: true,\n        endAdornment,\n      }}\n      inputProps={inputProps}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      variant=\"filled\"\n      {...propRest}\n    />\n  );\n}\n\nInputCustom.propTypes = {\n  endAdornment: PropTypes.any,\n  error: PropTypes.bool,\n  inputProps: PropTypes.any,\n};\n\nInputCustom.defaultProps = {\n  endAdornment: null,\n  error: false,\n  inputProps: {},\n};\n\nexport default InputCustom;\n","// custom MUI tooltip with click event for mobile\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nfunction TooltipCustom(props) {\n  const [open, setOpen] = useState(false);\n  const [isMd, setIsMd] = useState(-1);\n  const { children, ...rest } = props;\n\n  useEffect(() => {\n    let isSub = true;\n\n    if (document.body.offsetWidth > 576) {\n      isSub && setIsMd(true);\n    } else {\n      isSub && setIsMd(false);\n    }\n\n    return () => (isSub = false);\n  }, []);\n\n  return (\n    <>\n      {isMd !== -1 && (\n        <>\n          {isMd ? (\n            // mode hover\n            <Tooltip {...rest}>{children}</Tooltip>\n          ) : (\n            // mode click\n            <Tooltip {...rest} open={open} onClick={() => setOpen(!open)}>\n              {children}\n            </Tooltip>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nTooltipCustom.propTypes = {\n  children: PropTypes.any,\n};\n\nexport default TooltipCustom;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    padding: '2.8rem 3.6rem',\n    boxShadow: 'var(--box-shadow)',\n    borderRadius: 'var(--border-radius)',\n    backgroundColor: 'var(--bg-color-sec)',\n  },\n\n  title: {\n    color: 'var(--title-color)',\n    textTransform: 'capitalize',\n    fontSize: '2.8rem',\n    marginBottom: '1.2rem',\n  },\n\n  grid: {\n    marginTop: '2.4rem',\n    marginBottom: '2.4rem',\n  },\n\n  tooltipIcon: {\n    fontSize: '1.6rem',\n    color: 'var(--label-color)',\n  },\n\n  btn: {\n    marginLeft: '1rem',\n    textTransform: 'none',\n    minWidth: '14rem',\n  },\n\n  btnReset: {\n    borderColor: 'var(--accent-color) !important',\n    color: 'var(--accent-color) !important',\n\n    '&:hover, &:active': {\n      filter: 'brightness(0.85)',\n    },\n  },\n\n  sentenceInput: {\n    minHeight: '8rem',\n  },\n}));\n","import InfoIcon from '@material-ui/icons/Info';\nimport TooltipCustom from 'components/UI/TooltipCustom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\n\nfunction InformationTooltip({ title }) {\n  const classes = useStyle();\n\n  return (\n    <TooltipCustom title={title} className=\"cur-help\">\n      <InfoIcon className={classes.tooltipIcon} />\n    </TooltipCustom>\n  );\n}\n\nInformationTooltip.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default InformationTooltip;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport InputCustom from 'components/UI/InputCustom';\nimport TopicSelect from 'components/UI/TopicSelect';\nimport { MAX } from 'constant';\nimport { SENTENCE_TOPICS } from 'constant/sentence-topics';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport InformationTooltip from '../Word/InformationTooltip';\nimport useStyle from '../Word/style';\n\nconst schema = yup.object().shape({\n  sentence: yup\n    .string()\n    .trim()\n    .required('Lets type your sentences')\n    .lowercase()\n    .max(MAX.SENTENCE_LEN, `Max length ${MAX.SENTENCE_LEN} characters`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required('Lets type Vietnamese meaning of this word')\n    .max(MAX.SENTENCE_MEAN_LEN, `Max length ${MAX.SENTENCE_MEAN_LEN} characters`),\n  note: yup\n    .string()\n    .max(\n      MAX.SENTENCE_NOTE_LEN,\n      `Maximum note ${MAX.SENTENCE_NOTE_LEN} characters`,\n    ),\n});\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction SentenceContribution({ submitting, onSubmitForm }) {\n  const classes = useStyle();\n  const topics = useRef([]);\n  const [resetFlag, setResetFlag] = useState(0);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onResetForm = () => {\n    topics.current = [];\n    setResetFlag(Math.random() + 1);\n    reset({ sentence: '', mean: '', note: '' });\n  };\n\n  const handleSubmitForm = (formData) => {\n    onSubmitForm({ ...formData, topics: topics.current });\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>Lets type your conversation sentences</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(handleSubmitForm)} autoComplete=\"off\">\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new sentence */}\n          <Grid item xs={12}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"An english sentence (*)\"\n              multiline\n              error={Boolean(errors.sentence)}\n              inputProps={{\n                autoFocus: true,\n                className: classes.sentenceInput,\n                maxLength: MAX.SENTENCE_LEN,\n                name: 'sentence',\n\n                ...register('sentence'),\n              }}\n              // onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.sentence && (\n              <p className=\"text-error\">{errors.sentence?.message}</p>\n            )}\n          </Grid>\n\n          {/* mean sentence */}\n          <Grid item xs={12}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Vietnamese meaning of this sentence (*)\"\n              error={Boolean(errors.mean)}\n              multiline\n              inputProps={{\n                maxLength: MAX.SENTENCE_MEAN_LEN,\n                name: 'mean',\n                className: classes.sentenceInput,\n                ...register('mean'),\n              }}\n              // onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.mean && (\n              <p className=\"text-error\">{errors.mean?.message}</p>\n            )}\n          </Grid>\n\n          {/* sentence note */}\n          <Grid item xs={12}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Note (*)\"\n              error={Boolean(errors.note)}\n              multiline\n              inputProps={{\n                className: classes.sentenceInput,\n                maxLength: MAX.SENTENCE_NOTE_LEN,\n                name: 'note',\n                ...register('note'),\n              }}\n              endAdornment={\n                <InformationTooltip title=\"Add more notes, ...\" />\n              }\n              // onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.note && (\n              <p className=\"text-error\">{errors.note?.message}</p>\n            )}\n          </Grid>\n\n          {/* topics */}\n          <TopicSelect\n            buttonWrapper={ButtonWrapper}\n            tagsWrapper={ButtonWrapper}\n            topicList={SENTENCE_TOPICS}\n            onChange={(v) => (topics.current = v)}\n            resetFlag={resetFlag}\n          />\n        </Grid>\n\n        <div className=\"dyno-break\"></div>\n\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={onResetForm}>\n            Reset\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nSentenceContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nexport default SentenceContribution;\n","import sentenceApi from 'apis/sentenceApi';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport SentenceContribution from './index';\n\nfunction SentenceContributionData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (formData) => {\n    const { sentence, mean, note, topics } = formData;\n    try {\n      setSubmitting(true);\n\n      const apiRes = await sentenceApi.postContributeSentence(\n        sentence,\n        mean,\n        note,\n        topics,\n      );\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message:\n              'Contribute successfully, hope you enjoy learning English with Cosmos',\n            duration: 5000,\n          }),\n        );\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message ||\n        'Please try again!!!';\n      dispatch(\n        setMessage({\n          type: 'error',\n          message,\n        }),\n      );\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <SentenceContribution submitting={submitting} onSubmitForm={handleSubmit} />\n  );\n}\n\nexport default SentenceContributionData;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    margin: '3.2rem 0',\n  },\n\n  tabs: {\n    marginTop: '2.4rem',\n    marginBottom: '3.6rem',\n    display: 'flex',\n    borderBottom: 'solid 1px var(--border-color)',\n  },\n\n  tab: {\n    padding: '1.2rem 2.4rem',\n    color: 'var(--label-color)',\n    cursor: 'pointer',\n\n    textAlign: 'center',\n    fontSize: '1.6rem',\n    textTransform: 'uppercase',\n    fontWeight: 700,\n\n    transition: 'all 0.25s',\n\n    '&.active': {\n      backgroundColor: 'var(--primary-color)',\n      borderTopLeftRadius: 6,\n      borderTopRightRadius: 6,\n      color: '#fff',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  input: {\n    display: 'none',\n  },\n\n  btn: {\n    minHeight: '5.6rem',\n    backgroundColor: 'var(--bg-color-accent) !important',\n    boxShadow: 'none !important',\n    border: 'solid 1px var(--border-color)',\n    color: 'var(--label-color)',\n\n    textTransform: 'capitalize',\n    '&:hover, &:active': {\n      opacity: '0.85',\n    },\n  },\n\n  skeleton: {\n    height: '100% !important',\n    backgroundColor: 'var(--bg-color-accent)',\n  },\n\n  review: {\n    backgroundColor: 'var(--bg-color-accent)',\n    border: 'solid 1px var(--border-color)',\n    padding: '0.6rem 1.2rem',\n    borderRadius: 'var(--sm-border-radius)',\n\n    '& img': {\n      height: '5.4rem',\n      width: '5.4rem',\n    },\n\n    '& p': {\n      color: 'var(--text-color)',\n      fontSize: '1.2rem',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      padding: '0 0.4rem',\n    },\n\n    '& .icon': {\n      color: 'var(--label-color)',\n      fontSize: '2.4rem',\n\n      transition: 'all 0.25s',\n      '&:hover, &:active': {\n        transform: 'scale(1.1)',\n      },\n    },\n  },\n}));\n","import Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Compressor from 'compressorjs';\nimport { MAX } from 'constant';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport useStyle from './style';\n\nfunction checkFile(file) {\n  if (!file) return { status: false, message: 'File không hợp lệ' };\n  const { type, size } = file;\n\n  if (type.split('/')[0] !== 'image')\n    return { status: false, message: 'File gửi lên phải là một ảnh' };\n\n  if (size / 1024 ** 2 > MAX.IMG_SIZE)\n    return {\n      status: false,\n      message: `Kích thước của ảnh tối đa là ${MAX.IMG_SIZE} MB`,\n    };\n\n  return { status: true };\n}\n\nfunction UploadButton({ title, className, onChange, resetFlag }) {\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({ status: 0, data: null });\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setState({ status: 0, data: null });\n  }, [resetFlag]);\n\n  const loadFileError = () => {\n    onChange(null);\n    setState({ status: 0 });\n    dispatch(\n      setMessage({\n        type: 'error',\n        message: 'Tải tập tin thất bại, thử lại',\n      }),\n    );\n  };\n\n  const onFileChange = (file) => {\n    const { status, message = '' } = checkFile(file);\n    if (!status) {\n      dispatch(setMessage({ type: 'error', message }));\n      onChange(null);\n      return;\n    }\n\n    setState({ status: 1 }); // loading\n    const size = file.size / 1024 ** 2;\n\n    // compress image\n    new Compressor(file, {\n      quality: size > 1 ? 0.6 : 0.8,\n\n      success(fileResult) {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(fileResult);\n\n        fileReader.onerror = loadFileError;\n\n        fileReader.onload = function (e) {\n          const imgSrcBase64 = e.target.result;\n          onChange(imgSrcBase64);\n          setState({\n            status: 2,\n            data: {\n              imgSrc: imgSrcBase64,\n              fileName: fileResult.name,\n              fileSize: (fileResult.size / 1024 ** 2).toFixed(2),\n            },\n          });\n        };\n      },\n\n      error() {\n        loadFileError();\n      },\n    });\n  };\n\n  const onRemoveFile = () => {\n    onChange(null);\n    setState({ status: 0, data: null });\n  };\n\n  return (\n    <div className={className}>\n      {/* waiting */}\n      {state.status === 0 && (\n        <>\n          <input\n            className={classes.input}\n            accept=\"image/*\"\n            id=\"button-file\"\n            htmlFor=\"contained-button-file\"\n            type=\"file\"\n            onChange={(e) => onFileChange(e.target.files[0])}\n          />\n          <label htmlFor=\"button-file\">\n            <Button\n              className={`${classes.btn} w-100 h-100`}\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              endIcon={<CloudUploadIcon />}>\n              {title}\n            </Button>\n          </label>\n        </>\n      )}\n\n      {/* loading */}\n      {state.status === 1 && (\n        <Skeleton variant=\"rect\" classes={{ root: classes.skeleton }} />\n      )}\n\n      {/* done */}\n      {state.status === 2 && (\n        <div className={`${classes.review} w-100 h-100 flex-center-between`}>\n          <img src={state.data?.imgSrc} alt=\"photo\" />\n          <p>{`${state.data?.fileName} (${state.data?.fileSize} MB)`} </p>\n          <DeleteIcon className=\"icon cur-pointer\" onClick={onRemoveFile} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nUploadButton.propTypes = {\n  title: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  resetFlag: PropTypes.number,\n};\n\nUploadButton.defaultProps = {\n  title: 'Upload',\n  className: '',\n  onChange: () => {},\n  resetFlag: 0,\n};\n\nexport default UploadButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    backgroundColor: 'var(--bg-color-main)',\n    boxShadow: 'var(--box-shadow)',\n    borderRadius: 'var(--border-radius)',\n    padding: '1.2rem',\n\n    display: 'grid',\n    gridTemplateColumns: 'repeat(6, 1fr)',\n    gap: '0.6rem',\n\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: 'repeat(10, 1fr)',\n    },\n\n    '& span': {\n      color: 'var(--text-color)',\n      fontSize: '2rem',\n      fontWeight: 500,\n      padding: '0.8rem',\n      cursor: 'pointer',\n      textAlign: 'center',\n      backgroundColor: 'var(--bg-color-accent)',\n      borderRadius: 'var(--sm-border-radius)',\n\n      '&.close': {\n        backgroundColor: 'var(--secondary-color)',\n      },\n\n      transition: 'all 0.25s',\n      '&:hover, &:active': {\n        backgroundColor: 'var(--primary-color)',\n      },\n    },\n  },\n}));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport useStyle from './style';\n\nconst IPA_CHARS = [\n  \"'\",\n  'ɪ',\n  'iː',\n  'ʊ',\n  'uː',\n  'e',\n  'ə',\n  'ɜː',\n  'ɔː',\n  'æ',\n  'ʌ',\n  'aː',\n  'ɒ',\n  'ɪə',\n  'eɪ',\n  'ʊə',\n  'ɔɪ',\n  'əʊ',\n  'aɪ',\n  'aʊ',\n  'tʃ',\n  'dʒ',\n  'θ',\n  'ð',\n  'ʃ',\n  'ŋ',\n  'ʒ',\n];\n\nfunction PhoneticKeyboard({ onClose, onInput }) {\n  const classes = useStyle();\n  return (\n    <div className={classes.root}>\n      {IPA_CHARS.map((c, index) => (\n        <span key={index} onClick={() => onInput(c)}>\n          {c}\n        </span>\n      ))}\n\n      <span onClick={onClose} className=\"close\">\n        Close\n      </span>\n    </div>\n  );\n}\n\nPhoneticKeyboard.propTypes = {\n  onClose: PropTypes.func,\n  onInput: PropTypes.func,\n};\n\nPhoneticKeyboard.defaultProps = {\n  onClose: function () {},\n  onInput: function () {},\n};\n\nexport default PhoneticKeyboard;\n","import Grid from '@material-ui/core/Grid';\nimport InputCustom from 'components/UI/InputCustom';\nimport PhoneticKeyboard from 'components/UI/PhoneticKeyboard';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport InformationTooltip from './InformationTooltip';\n\nfunction PhoneticInput(props) {\n  const { errorMessage, error, register, resetFlag, ...restProps } = props;\n  const { inputProps } = restProps;\n  const { ref, ...rest } = register;\n  const inputRef = useRef(null);\n\n  const [openKeyboard, setOpenKeyboard] = useState(false);\n  const [value, setValue] = useState('');\n\n  const onCloseKeyboard = () => setOpenKeyboard(false);\n\n  const onInput = (c) => {\n    setValue(value + c);\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    if (!resetFlag) return;\n    // reset value if parent component reset, except first render\n    setValue('');\n  }, [resetFlag]);\n\n  return (\n    <>\n      <Grid item xs={12} md={6} lg={4}>\n        <InputCustom\n          onClick={() => setOpenKeyboard(true)}\n          className=\"w-100\"\n          label=\"Notation (*)\"\n          error={error}\n          value={value}\n          inputProps={{\n            ...inputProps,\n            ...rest,\n            ref: (e) => {\n              ref(e);\n              inputRef.current = e;\n            },\n          }}\n          onChange={(e) => setValue(e.target.value)}\n          endAdornment={\n            <InformationTooltip title=\"Input notation of new words. example: fəˈnetɪk\" />\n          }\n        />\n        {errorMessage && <p className=\"text-error\">{errorMessage}</p>}\n      </Grid>\n\n      {openKeyboard && (\n        <Grid item xs={12}>\n          <PhoneticKeyboard onInput={onInput} onClose={onCloseKeyboard} />\n        </Grid>\n      )}\n    </>\n  );\n}\n\nPhoneticInput.propTypes = {\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  register: PropTypes.any,\n  resetFlag: PropTypes.number,\n};\n\nPhoneticInput.defaultProps = {\n  error: false,\n  errorMessage: null,\n  resetFlag: 0,\n};\n\nexport default PhoneticInput;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport ResetIcon from '@material-ui/icons/RotateLeft';\nimport SaveIcon from '@material-ui/icons/Save';\nimport wordApi from 'apis/wordApi';\nimport InputCustom from 'components/UI/InputCustom';\nimport SelectCustom from 'components/UI/SelectCustom';\nimport TopicSelect from 'components/UI/TopicSelect';\nimport UploadButton from 'components/UI/UploadButton';\nimport { MAX, WORD_LEVELS, WORD_SPECIALTY, WORD_TYPES } from 'constant';\nimport { debounce } from 'helper';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport * as yup from 'yup';\nimport InformationTooltip from './InformationTooltip';\nimport PhoneticInput from './PhoneticInput';\nimport useStyle from './style';\n\nlet delayTimer = null;\n\nconst schema = yup.object().shape({\n  word: yup\n    .string()\n    .trim()\n    .required('Lets input the words')\n    .lowercase()\n    .max(MAX.WORD_LEN, `Words maximum ${MAX.WORD_LEN} character`),\n  mean: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required('Lets input the meaning')\n    .max(MAX.MEAN_WORD_LEN, `Words maximum ${MAX.MEAN_WORD_LEN}  character`),\n  phonetic: yup\n    .string()\n    .trim()\n    .lowercase()\n    .required('Lets input notation of words')\n    .max(MAX.PHONETIC_LEN, `Words maximum  ${MAX.PHONETIC_LEN}  character`),\n  type: yup\n    .string()\n    .required('Select type of words')\n    .oneOf(WORD_TYPES.map((i) => i.value)),\n  level: yup\n    .string()\n    .required('Select level')\n    .oneOf(WORD_LEVELS.map((i) => i.value)),\n  specialty: yup\n    .string()\n    .required('Select Specialized')\n    .oneOf(WORD_SPECIALTY.map((i) => i.value)),\n  examples: yup\n    .string()\n    .max(MAX.EXAMPLE_WORD_LEN, `Example maximum ${MAX.EXAMPLE_WORD_LEN} character`),\n  synonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Synonyms maximum ${MAX.SYNONYMS_WORD_LEN} character`,\n    ),\n  antonyms: yup\n    .string()\n    .max(\n      MAX.SYNONYMS_WORD_LEN,\n      `Anonyms maximum ${MAX.SYNONYMS_WORD_LEN} character`,\n    ),\n  note: yup\n    .string()\n    .max(MAX.NOTE_WORD_LEN, `Note maximum ${MAX.NOTE_WORD_LEN} character`),\n});\n\n// Prevent unmount component topic select\nconst ButtonWrapper = (props) => <Grid {...props} item xs={12} md={6} lg={4} />;\nconst TagsWrapper = (props) => <Grid {...props} item xs={12} />;\n\nfunction WordContribution({ onSubmitForm, submitting }) {\n  const classes = useStyle();\n  const [resetFlag, setResetFlag] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    getValues,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const topics = useRef([]);\n  const picture = useRef(null);\n\n  const onSubmit = (data) => {\n    onSubmitForm({ ...data, topics: topics.current, picture: picture.current });\n  };\n\n  const onResetForm = () => {\n    const initialValues = {\n      word: '',\n      mean: '',\n      phonetic: '',\n      type: 'n',\n      level: 'A1',\n      specialty: '0',\n      examples: '',\n      synonyms: '',\n      antonyms: '',\n      note: '',\n    };\n    topics.current = [];\n    picture.current = null;\n    reset(initialValues);\n    setResetFlag(Math.random() + 1);\n  };\n\n  const handleCheckWordExistence = (eWord, eType) => {\n    delayTimer = debounce(\n      delayTimer,\n      async () => {\n        try {\n          const word = eWord ? eWord.target?.value : getValues('word'),\n            type = eType ? eType.target?.value : getValues('type');\n\n          const apiRes = await wordApi.getCheckWordExistence(word, type);\n          if (apiRes.status === 200) {\n            const { isExist = false } = apiRes.data;\n            if (isExist) {\n              dispatch(\n                setMessage({\n                  type: 'warning',\n                  message: `Words ${word} (${type}) is existed !`,\n                  duration: 2000,\n                }),\n              );\n            }\n          }\n        } catch (error) {}\n      },\n      1000,\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1 className={classes.title}>Add a new words into Cosmos</h1>\n      <div className=\"dyno-break\"></div>\n\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Grid className={classes.grid} container spacing={3}>\n          {/* new word */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"New words (*)\"\n              error={Boolean(errors.word)}\n              inputProps={{\n                autoFocus: true,\n                maxLength: MAX.WORD_LEN,\n                name: 'word',\n                ...register('word'),\n              }}\n              onChange={(e) => handleCheckWordExistence(e, null)}\n            />\n            {errors.word && (\n              <p className=\"text-error\">{errors.word?.message}</p>\n            )}\n          </Grid>\n\n          {/* mean */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Meaning (*)\"\n              error={Boolean(errors.mean)}\n              inputProps={{\n                maxLength: MAX.MEAN_WORD_LEN,\n                name: 'mean',\n                ...register('mean'),\n              }}\n            />\n            {errors.mean && (\n              <p className=\"text-error\">{errors.mean?.message}</p>\n            )}\n          </Grid>\n\n          {/* phonetic */}\n          <PhoneticInput\n            errorMessage={errors.phonetic?.message}\n            error={Boolean(errors.phonetic)}\n            resetFlag={resetFlag}\n            inputProps={{\n              maxLength: MAX.PHONETIC_LEN,\n              name: 'phonetic',\n            }}\n            register={register('phonetic')}\n          />\n\n          {/* word type */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Type of words (*)\"\n              options={WORD_TYPES}\n              error={Boolean(errors.type)}\n              resetFlag={resetFlag}\n              inputProps={{\n                name: 'type',\n                ...register('type'),\n              }}\n              onChange={(e) => handleCheckWordExistence(null, e)}\n            />\n            {errors.type && (\n              <p className=\"text-error\">{errors.type?.message}</p>\n            )}\n          </Grid>\n\n          {/* word level */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Level (*)\"\n              options={WORD_LEVELS}\n              error={Boolean(errors.level)}\n              resetFlag={resetFlag}\n              inputProps={{ name: 'level', ...register('level') }}\n            />\n            {errors.level && (\n              <p className=\"text-error\">{errors.level?.message}</p>\n            )}\n          </Grid>\n\n          {/* word specialty */}\n          <Grid item xs={12} md={6} lg={4}>\n            <SelectCustom\n              className=\"w-100\"\n              label=\"Specialized\"\n              options={WORD_SPECIALTY}\n              error={Boolean(errors.specialty)}\n              resetFlag={resetFlag}\n              inputProps={{\n                name: 'specialty',\n                ...register('specialty'),\n              }}\n            />\n            {errors.specialty && (\n              <p className=\"text-error\">{errors.specialty?.message}</p>\n            )}\n          </Grid>\n\n          {/* examples */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Example\"\n              multiline\n              error={Boolean(errors.examples)}\n              inputProps={{\n                name: 'examples',\n                ...register('examples'),\n              }}\n            />\n\n            {errors.examples && (\n              <p className=\"text-error\">{errors.examples?.message}</p>\n            )}\n          </Grid>\n\n          {/* synonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Synonyms\"\n              multiline\n              error={Boolean(errors.synonyms)}\n              inputProps={{\n                name: 'synonyms',\n                ...register('synonyms'),\n              }}\n            />\n            {errors.synonyms && (\n              <p className=\"text-error\">{errors.synonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* antonyms */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Antonyms\"\n              multiline\n              error={Boolean(errors.antonyms)}\n              inputProps={{\n                name: 'antonyms',\n                ...register('antonyms'),\n              }}\n            />\n            {errors.antonyms && (\n              <p className=\"text-error\">{errors.antonyms?.message}</p>\n            )}\n          </Grid>\n\n          {/* Note */}\n          <Grid item xs={12} md={6} lg={4}>\n            <InputCustom\n              className=\"w-100\"\n              label=\"Note\"\n              multiline\n              error={Boolean(errors.note)}\n              inputProps={{\n                name: 'note',\n                ...register('note'),\n              }}\n            />\n            {errors.note && (\n              <p className=\"text-error\">{errors.note?.message}</p>\n            )}\n          </Grid>\n\n          {/* picture */}\n          <Grid item xs={12} md={6} lg={4}>\n            <UploadButton\n              title=\"Picture\"\n              className=\"w-100 h-100\"\n              resetFlag={resetFlag}\n              onChange={(imgSrc) => (picture.current = imgSrc)}\n            />\n          </Grid>\n\n          {/* word topics */}\n          <TopicSelect\n            onChange={(topicList) => (topics.current = topicList)}\n            resetFlag={resetFlag}\n            buttonTitle=\"Topic\"\n            buttonWrapper={ButtonWrapper}\n            tagsWrapper={TagsWrapper}\n          />\n        </Grid>\n\n        <div className=\"dyno-break\"></div>\n        {/* button group */}\n        <div className=\"d-flex flex-end jus-content-end pt-5 w-100\">\n          <Button\n            className={`${classes.btn} ${classes.btnReset}`}\n            color=\"secondary\"\n            endIcon={<ResetIcon />}\n            variant=\"outlined\"\n            disabled={submitting}\n            onClick={onResetForm}>\n            Reset\n          </Button>\n          <Button\n            type=\"submit\"\n            className={`${classes.btn} _btn _btn-primary`}\n            disabled={submitting}\n            endIcon={\n              submitting ? <LoopIcon className=\"ani-spin\" /> : <SaveIcon />\n            }\n            variant=\"contained\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nWordContribution.propTypes = {\n  onSubmitForm: PropTypes.func,\n  submitting: PropTypes.bool,\n};\n\nWordContribution.defaultProps = {\n  onSubmitForm: function () {},\n  submitting: false,\n};\n\nexport default WordContribution;\n","import wordApi from 'apis/wordApi';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setMessage } from 'redux/slices/message.slice';\nimport WordContribution from './index';\n\nconst analysisExample = (exampleStr = '', word = '') => {\n  if (typeof exampleStr !== 'string' || exampleStr === '') {\n    return [];\n  }\n\n  const exampleArr = exampleStr.split('\\n');\n  for (let str of exampleArr) {\n    if (str.toLocaleLowerCase().indexOf(word.toLocaleLowerCase()) === -1) {\n      return false;\n    }\n  }\n\n  return exampleArr;\n};\n\nfunction WordContributionData() {\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (data) => {\n    try {\n      setSubmitting(true);\n      const { examples, synonyms, antonyms, word, phonetic, ...rest } = data;\n\n      // check examples validation\n      const exampleArr = analysisExample(examples, word);\n      if (typeof exampleArr === 'boolean' && !exampleArr) {\n        dispatch(\n          setMessage({\n            type: 'warning',\n            message: 'Sentence of example include the new words.',\n          }),\n        );\n        setSubmitting(false);\n        return;\n      }\n\n      // split synonyms string to an array synonyms\n      const synonymArr = synonyms !== '' ? synonyms.split('\\n') : [];\n\n      // split antonyms string to an array synonyms\n      const antonymArr = antonyms !== '' ? antonyms.split('\\n') : [];\n\n      // call API\n      const dataSend = {\n        ...rest,\n        examples: exampleArr,\n        synonyms: synonymArr,\n        antonyms: antonymArr,\n        word,\n        phonetic: phonetic.replaceAll('/', ''),\n      };\n\n      const apiRes = await wordApi.postContributeWord(dataSend);\n\n      if (apiRes.status === 200) {\n        dispatch(\n          setMessage({\n            type: 'success',\n            message:\n              'Addition successfully, Waiting process . Thank for your contribution'\n          }),\n        );\n        setSubmitting(false);\n      }\n    } catch (error) {\n      const message =\n        error.response?.data?.message ||\n        'Addition error ,please try again';\n      dispatch(\n        setMessage({\n          type: 'error',\n          message,\n        }),\n      );\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <WordContribution onSubmitForm={handleSubmit} submitting={submitting} />\n  );\n}\n\nexport default WordContributionData;\n","import React, { useState } from 'react';\nimport SentenceContributionData from './Sentence/data';\nimport useStyle from './style';\nimport WordContributionData from './Word/data';\n\nfunction Contribution() {\n  const classes = useStyle();\n  const [mode, setMode] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <div className={classes.root}>\n        <ul className={classes.tabs}>\n          <li\n            className={`${classes.tab} ${mode === 0 ? 'active' : ''}`}\n            onClick={() => setMode(0)}>\n            Contribution words\n          </li>\n          <li\n            className={`${classes.tab} ${mode === 1 ? 'active' : ''}`}\n            onClick={() => setMode(1)}>\n            Contribution sentence\n          </li>\n        </ul>\n\n        <div className={classes.tabContent}>\n          {mode === 0 ? (\n            <div className=\"ani-fade\">\n              <WordContributionData />\n            </div>\n          ) : (\n            <div className=\"ani-zoom\">\n              <SentenceContributionData />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contribution;\n","import Contribution from 'components/Contribution';\nimport useScrollTop from 'hooks/useScrollTop';\nimport useTitle from 'hooks/useTitle';\nimport React from 'react';\n\nfunction ContributionPage() {\n  useTitle('Contribution');\n  useScrollTop();\n\n  return <Contribution />;\n}\n\nexport default ContributionPage;\n"],"sourceRoot":""}